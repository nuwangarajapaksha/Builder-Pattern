/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.IntelliJTheme;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.Laptop;
import model.LaptopBuilder;

/**
 *
 * @author NUWAA
 */
public class SlLaptop extends javax.swing.JFrame {

    /**
     * Creates new form SlLaptopShop
     */
    public SlLaptop() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        brandTextField = new javax.swing.JTextField();
        modelTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ramTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        gpuTextField = new javax.swing.JTextField();
        processorTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        hddCapacityTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        screenSizeTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        osTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        wifiCheckBox = new javax.swing.JCheckBox();
        bluetoothCheckBox = new javax.swing.JCheckBox();
        buildPcButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pcDetailsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SL Laptop");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setText("SL Laptop");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Set Features", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Brand : ");

        brandTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        modelTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Model : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("RAM : ");

        ramTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ramTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ramTextFieldKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("GPU : ");

        gpuTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gpuTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gpuTextFieldKeyTyped(evt);
            }
        });

        processorTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Processor : ");

        hddCapacityTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hddCapacityTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hddCapacityTextFieldKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Hard Drive Capacity : ");

        screenSizeTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        screenSizeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                screenSizeTextFieldKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Screen Size : ");

        osTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("OS : ");

        wifiCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wifiCheckBox.setText("Wi-Fi");

        bluetoothCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bluetoothCheckBox.setText("Bluetooth");

        buildPcButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buildPcButton.setText("Build PC");
        buildPcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildPcButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buildPcButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(wifiCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(bluetoothCheckBox))
                            .addComponent(modelTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(ramTextField)
                            .addComponent(gpuTextField)
                            .addComponent(processorTextField)
                            .addComponent(hddCapacityTextField)
                            .addComponent(screenSizeTextField)
                            .addComponent(osTextField)
                            .addComponent(brandTextField))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ramTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gpuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hddCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(screenSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(osTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wifiCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bluetoothCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buildPcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "PC Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        pcDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Model", "RAM", "GPU", "Processor", "Hard Drive Capacity", "Screen Size", "Wi-Fi", "Bluetooth", "OS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pcDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pcDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pcDetailsTable);
        if (pcDetailsTable.getColumnModel().getColumnCount() > 0) {
            pcDetailsTable.getColumnModel().getColumn(5).setPreferredWidth(150);
            pcDetailsTable.getColumnModel().getColumn(6).setPreferredWidth(80);
            pcDetailsTable.getColumnModel().getColumn(7).setPreferredWidth(50);
            pcDetailsTable.getColumnModel().getColumn(8).setPreferredWidth(70);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buildPcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildPcButtonActionPerformed
        // TODO add your handling code here:
        String brand = brandTextField.getText();
        String model = modelTextField.getText();
        String ram = ramTextField.getText();
        String gpu = gpuTextField.getText();
        String processor = processorTextField.getText();
        String hddCapacity = hddCapacityTextField.getText();
        String screenSize = screenSizeTextField.getText();
        boolean wifi = wifiCheckBox.isSelected();
        boolean bluetooth = bluetoothCheckBox.isSelected();
        String os = osTextField.getText();

        if (brand.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Brand", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (model.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Model", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (ram.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the RAM", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (gpu.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the GPU", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (processor.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Processor", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (hddCapacity.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Hard Drive Capacity", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (screenSize.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the Screen Size", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else if (os.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter the OS", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else {

            LaptopBuilder laptopBuilder = new LaptopBuilder();

            laptopBuilder.setBrand(brand);
            laptopBuilder.setModel(model);
            laptopBuilder.setRam(Integer.valueOf(ram));
            laptopBuilder.setGpu(Integer.valueOf(gpu));
            laptopBuilder.setProcessor(processor);
            laptopBuilder.setHddCapacity(Integer.valueOf(hddCapacity));
            laptopBuilder.setScreenSize(Double.parseDouble(screenSize));
            if (wifi) {
                laptopBuilder.setWifi(wifi);
            }
            if (bluetooth) {
                laptopBuilder.setBluetooth(bluetooth);
            }
            laptopBuilder.setOs(os);

            Laptop laptop = laptopBuilder.getLaptop();

            JOptionPane.showMessageDialog(this, laptop.toString(), "PC Details", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel dtm = (DefaultTableModel) pcDetailsTable.getModel();
            Vector vector = new Vector();
            vector.add(brand);
            vector.add(model);
            vector.add(ram);
            vector.add(gpu);
            vector.add(processor);
            vector.add(hddCapacity);
            vector.add(screenSize);
            if (wifi) {
                vector.add("Yes");
            } else {
                vector.add("No");
            }
            if (bluetooth) {
                vector.add("Yes");
            } else {
                vector.add("No");
            }
            vector.add(os);
            dtm.addRow(vector);

            brandTextField.setText("");
            modelTextField.setText("");
            ramTextField.setText("");
            gpuTextField.setText("");
            processorTextField.setText("");
            hddCapacityTextField.setText("");
            screenSizeTextField.setText("");
            wifiCheckBox.setSelected(false);
            bluetoothCheckBox.setSelected(false);
            osTextField.setText("");
        }


    }//GEN-LAST:event_buildPcButtonActionPerformed

    private void pcDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pcDetailsTableMouseClicked
        // TODO add your handling code here:
        int row = pcDetailsTable.getSelectedRow();

        String brand = pcDetailsTable.getValueAt(row, 0).toString();
        String model = pcDetailsTable.getValueAt(row, 1).toString();
        String ram = pcDetailsTable.getValueAt(row, 2).toString();
        String gpu = pcDetailsTable.getValueAt(row, 3).toString();
        String processor = pcDetailsTable.getValueAt(row, 4).toString();
        String hddCapacity = pcDetailsTable.getValueAt(row, 5).toString();
        String screenSize = pcDetailsTable.getValueAt(row, 6).toString();
        String wifi = pcDetailsTable.getValueAt(row, 7).toString();
        String bluetooth = pcDetailsTable.getValueAt(row, 8).toString();
        String os = pcDetailsTable.getValueAt(row, 9).toString();

        LaptopBuilder laptopBuilder = new LaptopBuilder();
        if (brand.length() > 0) {
            laptopBuilder.setBrand(brand);
        }
        if (model.length() > 0) {
            laptopBuilder.setModel(model);
        }
        if (ram.length() > 0) {
            laptopBuilder.setRam(Integer.valueOf(ram));
        }
        if (gpu.length() > 0) {
            laptopBuilder.setGpu(Integer.valueOf(gpu));
        }
        if (processor.length() > 0) {
            laptopBuilder.setProcessor(processor);
        }
        if (hddCapacity.length() > 0) {
            laptopBuilder.setHddCapacity(Integer.valueOf(hddCapacity));
        }
        if (screenSize.length() > 0) {
            laptopBuilder.setScreenSize(Double.parseDouble(screenSize));
        }
        if (wifi.length() > 0 && wifi=="Yes") {
            laptopBuilder.setWifi(true);
        }
        if (bluetooth.length() > 0 && bluetooth == "Yes") {
            laptopBuilder.setBluetooth(true);
        }
        if (os.length() > 0) {
            laptopBuilder.setOs(os);
        }

        Laptop laptop = laptopBuilder.getLaptop();

        JOptionPane.showMessageDialog(this, laptop.toString(), "PC Details", JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_pcDetailsTableMouseClicked

    private void ramTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ramTextFieldKeyTyped
        // TODO add your handling code here:
        if (((!Character.isDigit(evt.getKeyChar())))) {
            evt.consume();
        }
    }//GEN-LAST:event_ramTextFieldKeyTyped

    private void gpuTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gpuTextFieldKeyTyped
        // TODO add your handling code here:
        if (((!Character.isDigit(evt.getKeyChar())))) {
            evt.consume();
        }
    }//GEN-LAST:event_gpuTextFieldKeyTyped

    private void hddCapacityTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hddCapacityTextFieldKeyTyped
        // TODO add your handling code here:
        if (((!Character.isDigit(evt.getKeyChar())))) {
            evt.consume();
        }
    }//GEN-LAST:event_hddCapacityTextFieldKeyTyped

    private void screenSizeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_screenSizeTextFieldKeyTyped
        // TODO add your handling code here:
        if (((Character.isDigit(evt.getKeyChar())) | (String.valueOf(evt.getKeyChar()).equals(".")))) {
            if (screenSizeTextField.getText().contains(".")) {
                if (!Character.isDigit(evt.getKeyChar())) {
                    evt.consume();
                }
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_screenSizeTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SlLaptop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SlLaptop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SlLaptop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SlLaptop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }

        try {
//            UIManager.setLookAndFeel(new FlatLightLaf());
            IntelliJTheme.setup(SlLaptop.class.getResourceAsStream(
                    "/resources/themes/arc-theme.theme.json"));
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", true);
            UIManager.put("ScrollBar.showButtons", true);
            UIManager.put("ScrollBar.width", 16);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SlLaptop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bluetoothCheckBox;
    private javax.swing.JTextField brandTextField;
    private javax.swing.JButton buildPcButton;
    private javax.swing.JTextField gpuTextField;
    private javax.swing.JTextField hddCapacityTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JTextField osTextField;
    private javax.swing.JTable pcDetailsTable;
    private javax.swing.JTextField processorTextField;
    private javax.swing.JTextField ramTextField;
    private javax.swing.JTextField screenSizeTextField;
    private javax.swing.JCheckBox wifiCheckBox;
    // End of variables declaration//GEN-END:variables
}
